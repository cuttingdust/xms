syntax="proto3" ;	/// 语法版本
package xmsg;		/// 包名(命名空间)
import "XMsgType.proto";

/// 消息头
message XMsgHead
{
	int32		msgSize		= 1;	///< 消息内容大小， 不包含头
	MsgType     msgType		= 2;	///< 消息类型
	string		token		= 3;	///< 令牌 如果是登录消息则为空
	string		serverName	= 4;	///< 微服务的名称 用于路由
	int64		msgID		= 5;	
}

/// 用户登陆请求 MSG_LOGIN_REQ
message XLoginReq 
{
	string username = 1;	///< 用户名
	string password = 2;	///< md5后的密码
}

message XLoginRes
{
	enum XLoginResType
	{
		XRT_OK			= 0;	///<<< 登陆成功
		XRT_ERR			= 1;	///<<< 用户名密码错误
		XRT_NO_USER		= 2;	///<<< 用户不存在
	}
	XLoginResType resType = 1;	///< 登陆结果类型
	string token		  = 2;	///< 登陆成功后的令牌, 失败为空
}


/// 目录请求
message XDirReq
{
	string path = 1;	/// 目录路径
}

/// 目录响应
message XDirRes
{
	enum XDirType
	{
		XDT_OK    = 0;	///<<< 目录获取成功
		XDT_ERROR = 1;	///<<< 目录获取错误
		XDT_NODIR = 2;	///<<< 目录不存在
	}

	message XDir
	{
		string filename = 1;
		int32  filesize = 2;
	}

	XDirType resType   = 1;	///< 目录结果类型
	repeated XDir dirs = 2;	///< 目录文件列表
}

message XServiceMap
{
	message XService
	{
		string name = 1;
		string ip   = 2;
		int32  port = 3;
	}

	message XServiceList
	{
		repeated XService services = 1;
	}
	map<string,XServiceList> serviceMap = 1;
	XMessageRes				 res		= 2;
}

message XRegisterReq
{
	string name = 1; ///< 服务名称
	int32  port = 2; ///< 服务端口
	string ip	= 3; ///< 服务ip
}

/// 通用响应 MT_REGISTER_RES 注册服务响应
message XMessageRes
{
	enum XReturn
	{
		XR_OK	 = 0;		
		XR_ERROR = 1;
	}
	XReturn return = 1;
	bytes  msg	   = 2;
}

/// MT_GET_SERVICE_REQ = 7;	/// 发现服务请求
message XGetServiceReq
{
	string name = 1; ///<	服务名称，如果未空，则获取所有服务
	enum XType
	{
		XT_ONE = 0;	///<<< 只取一类服务	
		XT_ALL = 1;	///<<< 取全部服务
	}
	XType type = 2;
}

/// 存储配置内容
message XConfig
{
	string service_name = 1;
	int32  service_port = 2;
	string service_ip	= 3;
	bytes  private_pb	= 4;
	bytes  proto		= 5;
}

/// 下载配置请求，响应是 XConfig
message XLoadConfigReq
{
	int32	service_port = 1;
	string	service_ip	 = 2;
}

message XDirConfig
{
	string root = 1;
}